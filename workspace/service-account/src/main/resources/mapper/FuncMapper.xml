<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.univer.account.mapper.FuncMapper">
  <resultMap id="BaseResultMap" type="com.univer.account.po.Func">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="func_id" jdbcType="BIGINT" property="funcId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="number" jdbcType="BIGINT" property="number" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="root_id" jdbcType="BIGINT" property="rootId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="selectMaxNumber" resultType="Long" parameterType="Long">
		select max(number) from func
		where parent_id = #{parentId}
	</select>

  <select id="getFuncByUserId" resultType="com.univer.account.po.Func">
    select distinct f.func_id as funcId,
        f.code,
        f.name,
        f.description,
        f.url,
        f.icon,
        f.type,
        f.number,
        f.parent_id as parentId,
        f.status,
        f.create_time as createTime,
        f.update_time as updateTime
	from func f
    left join func_role fr on fr.func_id = f.func_id
    left join user_role ur on ur.role_id = fr.role_id
    left join user u on u.user_id = ur.user_id
    where 1 = 1
      <if test="userId != null">
          and u.user_id = #{userId}
      </if>
      <if test="status != null and status !=''">
          and f.status = #{status}
      </if>
    order by f.parent_id,f.number
  </select>

  <select id="selectByRoleId" resultType="com.univer.account.po.Func">
    select f.func_id as funcId,
        f.name,
        f.code,
        f.type,
        f.description,
        f.url,
        f.icon,
        f.number,
        f.parent_id as parentId,
        f.status,
        f.create_time as createTime,
        f.update_time as updateTime
    from func f
    left join func_role fr on fr.func_id =f.func_id
    where 1 = 1
      <if test="roleId != null">
          and fr.role_id = #{roleId}
      </if>
      <if test="status != null and status !=''">
          and f.status = #{status}
      </if>
</select>

    <select id="getFuncVoByUserId" resultType="com.univer.account.vo.FuncVo">
        select distinct f.func_id as funcId,
        f.code,
        f.name,
        f.description,
        f.url,
        f.icon,
        f.type,
        f.number,
        f.parent_id as parentId,
        f.status,
        f.create_time as createTime,
        f.update_time as updateTime
        from func f
        left join func_role fr on fr.func_id = f.func_id
        left join user_role ur on ur.role_id = fr.role_id
        left join user u on u.user_id = ur.user_id
        where 1 = 1
        <if test="userId != null">
            and u.user_id = #{userId}
        </if>
        <if test="status != null and status !=''">
            and f.status = #{status}
        </if>
        order by f.parent_id,f.number
    </select>

</mapper>