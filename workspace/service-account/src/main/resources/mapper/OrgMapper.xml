<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.univer.account.mapper.OrgMapper">
  <resultMap id="BaseResultMap" type="com.univer.account.po.Org">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="number" jdbcType="BIGINT" property="number" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="creater_id" jdbcType="BIGINT" property="createrId"/>
    <result column="root_id" jdbcType="BIGINT" property="rootId"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
    <select id="selectMaxNumber" resultType="Long" parameterType="Long">
		select max(org_id)
		from org
		where parent_id = #{parentId}
	</select>

    <select id="selectByMap" resultType="com.univer.account.vo.OrgVo">
		select o.org_id as orgId,
            o.name,
            o.code,
            o.type,
            o.number,
            o.description,
            o.parent_id as parentId,
            o.status,
            o.creater_id as createrId,
            o.root_id as rootId,
            o.create_time as createTime,
            o.update_time as updateTime
            from org o
            where 1=1
        <if test="orgId != null">
            and o.org_id = #{orgId}
        </if>
        <if test="name != null and name != '' ">
            and o.name = #{name}
        </if>
        <if test="likeName != null and likeName != '' ">
            and o.name like CONCAT('%',#{likeName},'%')
        </if>
        <if test="parentId != null">
            and o.parent_id = #{parentId}
        </if>
        <if test="status != null ">
            and o.status = #{status}
        </if>
	</select>

    <select id="selectChildrenIds" resultType="Long">
        select  org_id
        from (select * from org order by parent_id, org_id) org_sorted,
             (select @pv := #{orgId}) initialisation
        where  find_in_set(parent_id, @pv)
        and length(@pv := concat(@pv, ',', org_id))
    </select>
    <select id="selectParentIds" resultType="Long">
        select T2.org_id
        from (
        select
        @r as _id,
        (select @r := parent_id from org where org_id = _id) as parent_id,
        @l := @l + 1 AS lvl from (select @r := #{orgId}, @l := 0) vars,
        org o where @r != 0 and parent_id > 0
        ) T1 join org T2 on T1._id = T2.org_id order by T1.lvl desc
    </select>
</mapper>